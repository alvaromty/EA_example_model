<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title></title>
<link href="../../../../css/ea.css" rel="stylesheet" type="text/css" />
<script>
function initPage(src) {	
	if(parent==this&&(this.location+"").indexOf('EARoot')!=-1)
		document.location=(this.location+"").substring(0,(this.location+"").indexOf('EARoot'))+"index"+(this.location+"").substring((this.location+"").lastIndexOf('.'))+"?goto="+((this.location+"").substring((this.location+"").indexOf('EARoot')+7,(this.location+"").lastIndexOf('.')).replace(/\//g,':').replace(/EA/g,""));
	else
		parent.initPage(src);
}

function nameClassifier(name, separator)
{
  var str = name;
  var classifierName;
  var node = document.getElementById('name_classifier');
  if(node != null)
  {
    classifierName = node.innerHTML;
  }
  if(classifierName != "")
  {
   str += separator + classifierName;
  }
  
  return str;
}
</script>
</head>
<body onload="initPage(this);" class="Content">
<div class="pageHeader"></div>
<div class="PageBody">
	<div id="name_classifier" style="display: none;"></div>
	<span class="ObjectTitle"><script type="text/javascript">document.write(nameClassifier("", " : "))</script>  : Public   Text</span>
	<table border="0" cellpadding="0" cellspacing="0" class="ObjectDetails">
		<tr>
			<td width="15%" class="ObjectDetailsTopic">Created:</td>
			<td width="85%" class="ObjectDetailsValue">11/7/2011 4:46:02 PM</td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic">Modified:</td>
			<td class="ObjectDetailsValue">7/18/2019 4:54:44 PM</td>
		</tr>
		<tr style="height: 10px"><td colspan="2"></td></tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../images/plus03.gif" align="absmiddle" id="proj" onclick="parent.toggleData(this.id)" />Project:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Author:</td>
			<td class="ObjectDetailsValue">Paulene Dean</td>
		</tr>
		<tr id="proj01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Version:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj02" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Phase:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj03" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Status:</td>
			<td class="ObjectDetailsValue">Proposed</td>
		</tr>
		<tr id="proj04" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Complexity:</td>
			<td class="ObjectDetailsValue">Easy</td>
		</tr>
		<tr id="proj05" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Difficulty:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj06" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Priority:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj05" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Multiplicity:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../images/plus03.gif" align="absmiddle" id="adv" onclick="parent.toggleData(this.id)" />Advanced:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="adv00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">UUID:</td>
			<td class="ObjectDetailsValue">{E8B1DEB6-B526-486c-8A51-2E96AC1C2383}</td>
		</tr>
		<tr id="adv01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Appears In:</td>
			<td class="ObjectDetailsValue"><a href="EA12311.htm">PlayerState</a></td>
		</tr>
	</table>
	<div class="ObjectDetailsNotes">The &#39;Player State&#39; StateMachine represents the core behavior of the Music Player class.&lt;br/&gt;&lt;br/&gt;Notice that the &lt;b&gt;On &lt;/b&gt;state is divided into two concurrent regions, each containing a number of sub-states.&lt;br/&gt;&lt;br/&gt;The first of these regions, named &lt;b&gt;Play State&lt;/b&gt;, controls loading and playing the songs.&#160;&#160;&lt;br/&gt;Upon entry of the &lt;b&gt;On&lt;/b&gt; state, the &lt;b&gt;Play State&lt;/b&gt; region enters the &lt;b&gt;Load &lt;/b&gt;state.&#160;&#160;&lt;br/&gt;The &lt;b&gt;Load &lt;/b&gt;state&#39;s entry action loads the SongList and PlayLists.&lt;br/&gt;Once this is complete, this region transitions to the &lt;b&gt;Standby &lt;/b&gt;state.&lt;br/&gt;In the &lt;b&gt;Standby &lt;/b&gt;state, the simulation waits for a trigger, either &lt;b&gt;PlaySong &lt;/b&gt;or &lt;b&gt;PlayList&lt;/b&gt;, to transition out of &lt;b&gt;Standby&lt;/b&gt;.&lt;br/&gt;In this example, each of the transitions exiting the &lt;b&gt;Standby&lt;/b&gt; state performs a Transition Action, &lt;br/&gt;in which they assign a string argument to an internal variable (the Song title or the PlayList name).&lt;br/&gt;&lt;br/&gt;The second concurrent region, &lt;b&gt;Repeat Mode&lt;/b&gt;, controls the player&#39;s repeat behavior.&lt;br/&gt;At any time during simulation, you can change the &lt;b&gt;Repeat Mode&lt;/b&gt;, by sending the &lt;b&gt;SetRepeat&lt;/b&gt; trigger.&lt;br/&gt;Transitions in the &lt;b&gt;Play State&lt;/b&gt; region use Guard conditions that test the &lt;b&gt;Repeat Mode&lt;/b&gt; state to determine whether the transition is allowed.&lt;br/&gt;&lt;br/&gt;At any time during simulation, the simulator will accept the &lt;b&gt;Stop &lt;/b&gt;signal to return to &lt;b&gt;Standby&lt;/b&gt;, or the &lt;b&gt;PowerOff&lt;/b&gt; signal to end the simulation.&lt;br/&gt;&lt;br/&gt;</div>

<div class="pageFooter"></div>
 
</body>
</html>