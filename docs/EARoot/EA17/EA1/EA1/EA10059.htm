<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title></title>
<link href="../../../../css/ea.css" rel="stylesheet" type="text/css" />
<script>
function initPage(src) {	
	if(parent==this&&(this.location+"").indexOf('EARoot')!=-1)
		document.location=(this.location+"").substring(0,(this.location+"").indexOf('EARoot'))+"index"+(this.location+"").substring((this.location+"").lastIndexOf('.'))+"?goto="+((this.location+"").substring((this.location+"").indexOf('EARoot')+7,(this.location+"").lastIndexOf('.')).replace(/\//g,':').replace(/EA/g,""));
	else
		parent.initPage(src);
}

function nameClassifier(name, separator)
{
  var str = name;
  var classifierName;
  var node = document.getElementById('name_classifier');
  if(node != null)
  {
    classifierName = node.innerHTML;
  }
  if(classifierName != "")
  {
   str += separator + classifierName;
  }
  
  return str;
}
</script>
</head>
<body onload="initPage(this);" class="Content">
<div class="pageHeader"></div>
<div class="PageBody">
	<div id="name_classifier" style="display: none;"></div>
	<span class="ObjectTitle"><script type="text/javascript">document.write(nameClassifier("", " : "))</script>  : Public   Text</span>
	<table border="0" cellpadding="0" cellspacing="0" class="ObjectDetails">
		<tr>
			<td width="15%" class="ObjectDetailsTopic">Created:</td>
			<td width="85%" class="ObjectDetailsValue">12/5/2016 5:28:27 PM</td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic">Modified:</td>
			<td class="ObjectDetailsValue">6/20/2019 4:20:43 PM</td>
		</tr>
		<tr style="height: 10px"><td colspan="2"></td></tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../images/plus03.gif" align="absmiddle" id="proj" onclick="parent.toggleData(this.id)" />Project:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Author:</td>
			<td class="ObjectDetailsValue">Pat Malone</td>
		</tr>
		<tr id="proj01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Version:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj02" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Phase:</td>
			<td class="ObjectDetailsValue">1.0</td>
		</tr>
		<tr id="proj03" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Status:</td>
			<td class="ObjectDetailsValue">Proposed</td>
		</tr>
		<tr id="proj04" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Complexity:</td>
			<td class="ObjectDetailsValue">Easy</td>
		</tr>
		<tr id="proj05" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Difficulty:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj06" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Priority:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="proj05" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Multiplicity:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr>
			<td class="ObjectDetailsTopic"><img src="../../../../images/plus03.gif" align="absmiddle" id="adv" onclick="parent.toggleData(this.id)" />Advanced:</td>
			<td class="ObjectDetailsValue"></td>
		</tr>
		<tr id="adv00" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">UUID:</td>
			<td class="ObjectDetailsValue">{30D9EF1E-6905-42ea-B773-01E8EC932B61}</td>
		</tr>
		<tr id="adv01" style="display: none;">
			<td class="ObjectDetailsTopic" style="padding-left: 18px;">Appears In:</td>
			<td class="ObjectDetailsValue"><a href="EA10049.htm">Example - Recordings and Test Sets</a></td>
		</tr>
	</table>
	<div class="ObjectDetailsNotes">This example makes use of sample source code that is part of your Enterprise Architect installation.&lt;br/&gt;The sample code for this example is installed to:&#160;&#160;&quot;C:\Program Files (x86)\Sparx Systems\EA\Code Samples\VEA&quot;&lt;br/&gt;but should be copied to a different location, so that you don&#39;t need to run with elevated permissions in order to compile and build the project.&lt;br/&gt;So, for example, copy everything in &quot;C:\Program Files (x86)\Sparx Systems\EA\Code Samples\VEA&quot;, &lt;br/&gt;to &quot;C:\EA_CodeSamples\VEA&quot;.&lt;br/&gt;&lt;br/&gt;Before running the example, you must configure Local Path definitions for %VEA% and %MSVS%.&lt;br/&gt;-&#160;&#160;&#160;&#160;%VEA% = &quot;C:\EA_CodeSamples\VEA&quot;&#160;&#160;&#160;&#160;(the directory into which you copied the sample code)&lt;br/&gt;-&#160;&#160;&#160;&#160;%MSVS% = &quot;C:\program files (x86)\Microsoft Visual Studio 9.0\Common7\IDE&quot;&lt;br/&gt;(From the &#39;Develop&#39; ribbon, select the option &#39;Preferences #gt; Options #gt; Configure Local Paths&#39;.)&lt;br/&gt;&lt;br/&gt;1.&#160;&#160;Open the Record and Analyze window.&#160;&#160;It can be accessed from the &#39;Execute&#39; ribbon, by selecting the option &#39;Tools #gt; Recorder #gt; Open Recorder&#39;.&lt;br/&gt;2.&#160;&#160;Open the Execution Analyzer window.&#160;&#160;It can be accessed from the &#39;Execute&#39; ribbon, by selecting the option &#39;Tools #gt; Analyzer&#39;.&lt;br/&gt;3.&#160;&#160;Locate the Analyzer script &#39;Book Test&#39;.&#160;&#160;It can be found in the Execution Analyzer window under &#39;Visual Execution Analysis..Net.Source&#39;.&lt;br/&gt;4.&#160;&#160;Select the script (by placing a checkmark), then build the project by clicking the &#39;Build&#39; button.&lt;br/&gt;5.&#160;&#160;View the source code for class Test.&#160;&#160;Select class Test on this diagram, then right-click and choose &#39;Code Engineering #gt; View Source Code&#39;.&lt;br/&gt;6.&#160;&#160;Place a recording marker at the instantiation of BookDB in the function RunBookStore() - on line 123.&#160;&#160;Create a breakpoint on this line, then open its Properties and set the action to &#39;Start Recording&#39;.&lt;br/&gt;7.&#160;&#160;&#160;Run the program.&lt;br/&gt;8.&#160;&#160;The program execution is recorded from the point where execution hits the recording marker. The Record and Analyze window displays the results of the recording.&lt;br/&gt;9.&#160;&#160;Use the drop-down arrow attached to the left-most toolbar button on the Record and Analyze window to show its command menu.&#160;&#160;This menu includes options to generate a range of diagrams from the information recorded during program execution.&lt;br/&gt;10.&#160;&#160;Generate all diagrams.&lt;br/&gt;&#160;&#160;&lt;br/&gt;</div>

<div class="pageFooter"></div>
 
</body>
</html>